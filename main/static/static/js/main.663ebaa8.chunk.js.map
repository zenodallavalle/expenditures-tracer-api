{"version":3,"sources":["components/alerts.jsx","components/upperBarComponents/refreshBtn.jsx","components/upperBarComponents/userBtn.jsx","components/upperBarComponents/upperRightBtn.jsx","components/upperBarComponents/backBtn.jsx","components/upperBar.jsx","components/bottomBar.jsx","API.jsx","components/functionalitiesMenu.jsx","components/user.jsx","components/mainViewComponents/prospect.jsx","components/uniformDate.jsx","components/mainViewComponents/expenditures.jsx","components/mainViewComponents/months.jsx","components/addEditExpenditureModal.jsx","components/actualMoneyOrIncomeModal.jsx","media/img/loading256.gif","customHooks.jsx","App.js","reportWebVitals.js","index.js"],"names":["Alerts","props","alerts","onClose","length","map","alert","Alert","variant","type","className","dismissible","body","id","RefreshBtn","isLoaded","onRefresh","React","useState","justSynced","setJustSynced","useEffect","setTimeout","process","onClick","disabled","icon","sync16","UserBtn","setPanel","user","workingDB","person16","username","package16","name","UpperRightBtn","selectedPanel","setExpenditureForModal","setExpenditureModalIsExpected","setShowCashModal","setShowExpenditureModal","setWorkingMonth","e","d","Date","month","getMonth","year","getFullYear","currentTarget","blur","getOnClick","pencil16","calendar16","plusCircle16","getIcon","BackBtn","onBack","arrowLeft16","UpperBar","previousPanel","BottomButton","button","display","BottomBar","style","maxWidth","idx","getBase","URL","document","location","href","origin","APIEditCash","authToken","cash","onSuccess","onError","onCallEnded","url","fetch","method","headers","Authorization","JSON","stringify","then","response","json","data","error","FunctionalitiesMenu","available","confirmDeleteTimeout","onShowControlsChanged","onEdit","onEditFinished","onDeleteClicked","onDeleteTimedOut","onDeleteConfirmed","undefined","showExpander","showControls","setShowControls","isEditing","setIsEditing","deleteConfirmed","setDeleteConfirmed","detonateDeleteTimeout","setDetonateDeleteTimeout","toggleControls","overflow","CSSTransition","in","enter","timeout","exit","classNames","unmountOnExit","kebabHorizontal16","chevronRight16","event","check16","clearTimeout","trashcan16","DBCell","addAlert","setIsLoaded","setPreviousPanel","setUser","isWorkingDB","setWorkingDB","db","setDB","value","onChange","editDB","target","show","APIEditDB","dbs","console","log","parseInt","localStorage","getItem","removeItem","APIDeleteDB","filter","AddDBCell","forwardRef","ref","changeName","isAdding","setIsAdding","placeholder","APIAddDB","User","setAuthData","setUsername","password","setPassword","Fragment","token","uId","htmlFor","APILogin","user_id","processed_error","CategoryCell","category","Prospect","retrieveClassForDeltaDiv","income","current_money","expected_expenditure","actual_expenditure","delta_expenditure","expected_saving","actual_saving","delta_saving","categories","showEditFunctions","delta","formatMonth","splitted","split","c","dateFormat","formatDate","date","current_d","format","setCategory","categoryUpdate","APIEditCategory","APIDeleteCategory","AddCategoryCell","APIAddCategory","ExpenditureCell","hasMouse","window","matchMedia","matches","expenditure","setExpenditure","expenditures","setExpenditures","onDelete","APIDeleteExpenditure","handlers","useSwipeable","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","showC","Boolean","is_expected","actual_expenditures","workflow16","rotate","CategoriesView","workingMonth","expendituresToRender","filterExpenditure","minHeight","db_id","additionalParameters","params","db__id","Object","keys","forEach","key","searchParams","append","APICopyPrecMonthExp","MonthCell","isWorkingMonth","monthName","monthIncome","monthActualMoney","Months","months","showExplanation","setShowExaplanation","preventDefault","AddEditExpenditureModal","isExpected","exp","ret","slice","prepareExpenditureToBeSavedLocally","utcMilliseconds","getTime","localMilliseconds","getTimezoneOffset","localDate","toISOString","dateToLocaleISOString","handleChange","expenditure_update","expectedExpenditure","reduce","prev","handleSubmit","expToSubmit","APIEditExpenditure","APIAddExpenditure","Modal","onHide","size","Header","closeButton","Title","Body","onSubmit","step","parseFloat","sort","a","b","toString","Footer","IncomeCell","incomes","setIncomes","setIncome","eventHandler","incomeUpdate","APIDeleteCash","AddIncomeCell","changeValue","wMonth","wYear","reference_date","APIAddCash","ActualMoneyOrIncomeModal","setShowActualMoneyOrIncomeModal","getWorkingDB","currentMoney","setCurrentMoney","editEnded","callback","currentMoneyUpdate","i","useObjectsDidUpdateEffect","effect","objects","evaluatingFunction","prevObj","obj","firstCall","multipleEvaluatingFunction","prevObjs","objs","firstCalls","fcs","objectsRef","useRef","o","push","some","current","App","authData","getCurrentMonth","setMonths","setAlerts","setSelectedPanel","showCashModal","showExpenditureModal","expenditureModalIsExpected","expenditureForModal","autodismiss","getAlertId","setPrevious","back","getCurrentUser","userId","APIGetUser","mex","k","workingDBId","APIGetDB","getExpenditures","APIGetExpenditures","results","getIncomes","APIGetCashes","getMonths","APIGetMonths","setItem","refresh","autodismissTimeout","autodismissFunction","src","loading","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.663ebaa8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Alerts = (props) => {\r\n  const { alerts, onClose } = props;\r\n  return (\r\n    <div>\r\n      {alerts.length > 0 &&\r\n        alerts.map((alert) => (\r\n          <Alert\r\n            key={'alert' + alert.id}\r\n            variant={alert.type}\r\n            className='mb-1'\r\n            onClose={() => {\r\n              onClose(alert);\r\n            }}\r\n            dismissible\r\n          >\r\n            {alert.body}\r\n          </Alert>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alerts;\r\n","import React from 'react';\r\nimport { InlineIcon } from '@iconify/react';\r\nimport sync16 from '@iconify-icons/octicon/sync-16';\r\n\r\nconst RefreshBtn = (props) => {\r\n  const { isLoaded, onRefresh } = props;\r\n  const [justSynced, setJustSynced] = React.useState(isLoaded);\r\n  React.useEffect(() => {\r\n    setJustSynced(isLoaded);\r\n    setTimeout(() => {\r\n      setJustSynced(false);\r\n    }, process.env.REACT_APP_ALERT_DEFAULT_DURATION);\r\n  }, [isLoaded]);\r\n  return (\r\n    <button\r\n      className='mirror btn mr-1 btn-outline-primary'\r\n      onClick={onRefresh}\r\n      disabled={!isLoaded}\r\n    >\r\n      <InlineIcon icon={sync16} className={justSynced ? 'spin' : ''} />\r\n    </button>\r\n  );\r\n};\r\nexport default RefreshBtn;\r\n","import React from 'react';\r\nimport { InlineIcon } from '@iconify/react';\r\nimport person16 from '@iconify-icons/octicon/person-16';\r\nimport package16 from '@iconify-icons/octicon/package-16';\r\n\r\nconst UserBtn = (props) => {\r\n  const { isLoaded, setPanel, user, workingDB } = props;\r\n  // user and working DB set\r\n  return (\r\n    <button\r\n      className={\r\n        'btn mr-1 btn-outline-' + (user && workingDB ? 'primary' : 'danger')\r\n      }\r\n      onClick={() => {\r\n        setPanel('user', true);\r\n      }}\r\n      disabled={!isLoaded}\r\n    >\r\n      <>\r\n        <InlineIcon icon={person16} />\r\n        {user ? (\r\n          <>\r\n            <span className='mx-1'>{user.username}</span>\r\n            <InlineIcon icon={package16} />\r\n            {workingDB ? (\r\n              <span className='ml-1'>{workingDB.name}</span>\r\n            ) : (\r\n              <span className='ml-1'>{'Choose DB'}</span>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <span className='ml-1'>{'Please login'}</span>\r\n        )}\r\n      </>\r\n    </button>\r\n  );\r\n};\r\nexport default UserBtn;\r\n","import React from 'react';\r\nimport { InlineIcon } from '@iconify/react';\r\nimport pencil16 from '@iconify-icons/octicon/pencil-16';\r\nimport plusCircle16 from '@iconify-icons/octicon/plus-circle-16';\r\nimport calendar16 from '@iconify-icons/octicon/calendar-16';\r\n\r\nconst UpperRightBtn = (props) => {\r\n  const {\r\n    isLoaded,\r\n    selectedPanel,\r\n    setExpenditureForModal,\r\n    setExpenditureModalIsExpected,\r\n    setShowCashModal,\r\n    setShowExpenditureModal,\r\n    setWorkingMonth,\r\n  } = props;\r\n  const getOnClick = () => {\r\n    switch (selectedPanel) {\r\n      case 'prospect':\r\n        return (e) => {\r\n          setShowCashModal(true);\r\n        };\r\n      case 'months':\r\n        return (e) => {\r\n          const d = new Date();\r\n          const month = d.getMonth() + 1;\r\n          const year = d.getFullYear();\r\n          setWorkingMonth((month < 10 ? '0' + month : '' + month) + '-' + year);\r\n        };\r\n      case 'expected':\r\n        return (e) => {\r\n          e.currentTarget.blur();\r\n          setExpenditureForModal(null);\r\n          setExpenditureModalIsExpected(true);\r\n          setShowExpenditureModal(true);\r\n        };\r\n      case 'actual':\r\n        return (e) => {\r\n          e.currentTarget.blur();\r\n          setExpenditureForModal(null);\r\n          setExpenditureModalIsExpected(false);\r\n          setShowExpenditureModal(true);\r\n        };\r\n      default:\r\n        return () => {};\r\n    }\r\n  };\r\n  const getIcon = () => {\r\n    switch (selectedPanel) {\r\n      case 'prospect':\r\n        return <InlineIcon icon={pencil16} />;\r\n      case 'months':\r\n        return <InlineIcon icon={calendar16} />;\r\n      default:\r\n        //\r\n        return <InlineIcon icon={plusCircle16} />;\r\n    }\r\n  };\r\n  return (\r\n    selectedPanel !== 'user' && (\r\n      <button\r\n        className='btn btn-outline-primary'\r\n        disabled={!isLoaded}\r\n        onClick={getOnClick()}\r\n      >\r\n        {getIcon()}\r\n      </button>\r\n    )\r\n  );\r\n};\r\n\r\nexport default UpperRightBtn;\r\n","import React from 'react';\r\nimport { InlineIcon } from '@iconify/react';\r\nimport arrowLeft16 from '@iconify-icons/octicon/arrow-left-16';\r\n\r\nconst BackBtn = (props) => {\r\n  const { isLoaded, onBack } = props;\r\n  return (\r\n    <button\r\n      className='btn btn-outline-primary mr-1 '\r\n      onClick={() => {\r\n        onBack();\r\n      }}\r\n      disabled={!isLoaded}\r\n    >\r\n      <InlineIcon icon={arrowLeft16} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BackBtn;\r\n","import React from 'react';\r\nimport RefreshBtn from './upperBarComponents/refreshBtn';\r\nimport UserBtn from './upperBarComponents/userBtn';\r\nimport UpperRightBtn from './upperBarComponents/upperRightBtn';\r\nimport BackBtn from './upperBarComponents/backBtn';\r\n\r\nconst UpperBar = (props) => {\r\n  const {\r\n    isLoaded,\r\n    onBack,\r\n    onRefresh,\r\n    previousPanel,\r\n    selectedPanel,\r\n    setExpenditureForModal,\r\n    setExpenditureModalIsExpected,\r\n    setPanel,\r\n    setShowCashModal,\r\n    setShowExpenditureModal,\r\n    setWorkingMonth,\r\n    user,\r\n    workingDB,\r\n  } = props;\r\n  return (\r\n    <div className='fixed-top bg-white safe-fixed-x safe-fixed-top'>\r\n      <div className='row m-0 p-1'>\r\n        <div className='col-9 text-left p-0'>\r\n          <RefreshBtn isLoaded={isLoaded} onRefresh={onRefresh} />\r\n          {previousPanel && <BackBtn isLoaded={isLoaded} onBack={onBack} />}\r\n          <UserBtn\r\n            isLoaded={isLoaded}\r\n            setPanel={setPanel}\r\n            user={user}\r\n            workingDB={workingDB}\r\n          />\r\n        </div>\r\n        <div className='col-3 text-right p-0'>\r\n          <UpperRightBtn\r\n            isLoaded={isLoaded}\r\n            selectedPanel={selectedPanel}\r\n            setExpenditureForModal={setExpenditureForModal}\r\n            setExpenditureModalIsExpected={setExpenditureModalIsExpected}\r\n            setShowCashModal={setShowCashModal}\r\n            setShowExpenditureModal={setShowExpenditureModal}\r\n            setWorkingMonth={setWorkingMonth}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpperBar;\r\n","import React from 'react';\r\n\r\nconst BottomButton = (props) => {\r\n  const { selectedPanel, setPanel, isLoaded, button } = props;\r\n  return (\r\n    <div className='col text-center pl-0 pr-0'>\r\n      <button\r\n        className={\r\n          'btn btn-sm w-100 ' +\r\n          (selectedPanel === button.name\r\n            ? 'btn-secondary'\r\n            : 'btn-outline-secondary')\r\n        }\r\n        onClick={() => {\r\n          setPanel(button.name);\r\n        }}\r\n        disabled={!isLoaded}\r\n      >\r\n        {button.display}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst BottomBar = (props) => {\r\n  const buttons = [\r\n    {\r\n      name: 'prospect',\r\n      display: 'Prospect',\r\n    },\r\n    {\r\n      name: 'actual',\r\n      display: 'Actual',\r\n    },\r\n    {\r\n      name: 'expected',\r\n      display: 'Expected',\r\n    },\r\n    {\r\n      name: 'months',\r\n      display: 'Months',\r\n    },\r\n  ];\r\n  const { isLoaded, selectedPanel, setPanel } = props;\r\n  return (\r\n    <footer className='footer fixed-bottom bg-white safe-fixed-x safe-fixed-bottom'>\r\n      <div className='row pt-1'>\r\n        <div className='col pr-0' style={{ maxWidth: 2 }}></div>\r\n        {buttons.map((button, idx) => (\r\n          <BottomButton\r\n            key={'button' + idx}\r\n            selectedPanel={selectedPanel}\r\n            setPanel={setPanel}\r\n            isLoaded={isLoaded}\r\n            button={button}\r\n          />\r\n        ))}\r\n        <div className='col pl-0' style={{ maxWidth: 2 }}></div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default BottomBar;\r\n","//import { getByDisplayValue } from '@testing-library/react';\r\nconst getBase = () => {\r\n  const u = new URL(document.location.href);\r\n  return u.origin;\r\n};\r\nexport function APILogin(\r\n  username,\r\n  password,\r\n  onSuccess = () => {},\r\n  onError = () => {}\r\n) {\r\n  const data = { username: username, password: password };\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'api-token-auth/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('token' in data) {\r\n          //logged in\r\n          onSuccess(data);\r\n        } else {\r\n          //wrong credentials\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    );\r\n}\r\n\r\nexport function APILogout() {}\r\n\r\nexport function APIGetUser(\r\n  authToken,\r\n  userId,\r\n  workingMonth,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'users/' + userId + '/',\r\n    getBase()\r\n  );\r\n  url.searchParams.append('month', workingMonth);\r\n  fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIGetDB(\r\n  authToken,\r\n  id,\r\n  workingMonth,\r\n  additionalParameters = {},\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'dbs/' + id + '/',\r\n    getBase()\r\n  );\r\n  url.searchParams.append('month', workingMonth);\r\n  Object.keys((additionalParameters = {})).forEach((key) => {\r\n    url.searchParams.append(key, additionalParameters[key]);\r\n  });\r\n  fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          //workingDB is set\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIAddDB(\r\n  authToken,\r\n  db,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new Date(process.env.REACT_APP_API_ROOT + 'dbs/', getBase());\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(db),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIEditDB(\r\n  authToken,\r\n  db,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'dbs/' + db.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(db),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIDeleteDB(\r\n  authToken,\r\n  db,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'dbs/' + db.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  })\r\n    .then(\r\n      () => {\r\n        if (db.id === parseInt(localStorage.getItem('workingDBId'))) {\r\n          localStorage.removeItem('workingDBId');\r\n        }\r\n        onSuccess();\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIAddCategory(\r\n  authToken,\r\n  category,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'categories/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(category),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(onCallEnded());\r\n}\r\nexport function APIEditCategory(\r\n  authToken,\r\n  category,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'categories/' + category.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(category),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIDeleteCategory(\r\n  authToken,\r\n  category,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'categories/' + category.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  })\r\n    .then(\r\n      () => {\r\n        onSuccess();\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIGetExpenditures(\r\n  authToken,\r\n  db_id,\r\n  workingMonth,\r\n  additionalParameters = {},\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  var url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'expenditures/',\r\n    getBase()\r\n  );\r\n  const params = {\r\n    db__id: db_id,\r\n    month: workingMonth,\r\n  };\r\n  Object.keys(params).forEach((key) =>\r\n    url.searchParams.append(key, params[key])\r\n  );\r\n  Object.keys(additionalParameters).forEach((key) =>\r\n    url.searchParams.append(key, additionalParameters[key])\r\n  );\r\n  fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        onSuccess(data);\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIAddExpenditure(\r\n  authToken,\r\n  expenditure,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'expenditures/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(expenditure),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APICopyPrecMonthExp(\r\n  authToken,\r\n  db_id,\r\n  workingMonth,\r\n  additionalParameters = {},\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  var url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'copy-expenditures-from-precedent-month/',\r\n    getBase()\r\n  );\r\n  const params = {\r\n    db__id: db_id,\r\n    month: workingMonth,\r\n  };\r\n  Object.keys(params).forEach((key) =>\r\n    url.searchParams.append(key, params[key])\r\n  );\r\n  Object.keys(additionalParameters).forEach((key) =>\r\n    url.searchParams.append(key, additionalParameters[key])\r\n  );\r\n  fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        onSuccess(data);\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIEditExpenditure(\r\n  authToken,\r\n  expenditure,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'expenditures/' + expenditure.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(expenditure),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\nexport function APIDeleteExpenditure(\r\n  authToken,\r\n  expenditure,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'expenditures/' + expenditure.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  })\r\n    .then(\r\n      () => {\r\n        onSuccess();\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIGetCashes(\r\n  authToken,\r\n  db_id,\r\n  workingMonth,\r\n  additionalParameters = {},\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  var url = new URL(process.env.REACT_APP_API_ROOT + 'cash/', getBase());\r\n  const params = {\r\n    db__id: db_id,\r\n    month: workingMonth,\r\n  };\r\n  Object.keys(params).forEach((key) =>\r\n    url.searchParams.append(key, params[key])\r\n  );\r\n  Object.keys(additionalParameters).forEach((key) =>\r\n    url.searchParams.append(key, additionalParameters[key])\r\n  );\r\n  fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        onSuccess(data);\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIAddCash(\r\n  authToken,\r\n  cash,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  var url = new URL(process.env.REACT_APP_API_ROOT + 'cash/', getBase());\r\n  fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(cash),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIEditCash(\r\n  authToken,\r\n  cash,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'cash/' + cash.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(cash),\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        if ('id' in data) {\r\n          onSuccess(data);\r\n        } else {\r\n          onError(data);\r\n        }\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIDeleteCash(\r\n  authToken,\r\n  cash,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(\r\n    process.env.REACT_APP_API_ROOT + 'cash/' + cash.id + '/',\r\n    getBase()\r\n  );\r\n  fetch(url, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  })\r\n    .then(\r\n      () => {\r\n        onSuccess();\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n\r\nexport function APIGetMonths(\r\n  authToken,\r\n  db_id,\r\n  onSuccess = () => {},\r\n  onError = () => {},\r\n  onCallEnded = () => {}\r\n) {\r\n  const url = new URL(process.env.REACT_APP_API_ROOT + 'months/', getBase());\r\n  const params = {\r\n    db__id: db_id,\r\n  };\r\n  Object.keys(params).forEach((key) =>\r\n    url.searchParams.append(key, params[key])\r\n  );\r\n  fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Token ' + authToken,\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then(\r\n      (data) => {\r\n        onSuccess(data);\r\n      },\r\n      (error) => {\r\n        onError(error);\r\n      }\r\n    )\r\n    .then(() => {\r\n      onCallEnded();\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { InlineIcon } from '@iconify/react';\r\nimport pencil16 from '@iconify-icons/octicon/pencil-16';\r\nimport check16 from '@iconify-icons/octicon/check-16';\r\nimport trashcan16 from '@iconify-icons/octicon/trashcan-16';\r\nimport kebabHorizontal16 from '@iconify-icons/octicon/kebab-horizontal-16';\r\nimport chevronRight16 from '@iconify-icons/octicon/chevron-right-16';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst FunctionalitiesMenu = (props) => {\r\n  const { available, confirmDeleteTimeout } = props;\r\n  const onShowControlsChanged = props.onShowControlsChanged || (() => {});\r\n  const onEdit = props.onEdit || (() => {});\r\n  const onEditFinished = props.onEditFinished;\r\n  const onDeleteClicked = props.onDeleteClicked || (() => {});\r\n  const onDeleteTimedOut = props.onDeleteTimedOut || (() => {});\r\n  const onDeleteConfirmed = props.onDeleteConfirmed || (() => {});\r\n\r\n  const [showExpander] = React.useState(\r\n    props.showExpander === undefined ? true : props.showExpander\r\n  );\r\n  const [showControls, setShowControls] = React.useState(\r\n    props.showControls === undefined ? false : props.showControls\r\n  );\r\n  React.useEffect(() => {\r\n    setShowControls(props.showControls);\r\n  }, [props.showControls]);\r\n  React.useEffect(() => {\r\n    onShowControlsChanged(showControls);\r\n  }, [showControls]);\r\n\r\n  const [isEditing, setIsEditing] = React.useState(false);\r\n  const [deleteConfirmed, setDeleteConfirmed] = React.useState(false);\r\n  const [detonateDeleteTimeout, setDetonateDeleteTimeout] = React.useState(\r\n    null\r\n  );\r\n  const toggleControls = () => {\r\n    if (showControls) {\r\n      setIsEditing(false);\r\n    }\r\n    setShowControls(!showControls);\r\n  };\r\n  const onEditBtnClicked = (event) => {\r\n    if (!onEditFinished) {\r\n      //onEditFinished not passed, so handle only onEdit\r\n      toggleControls();\r\n      onEdit(event);\r\n    } else {\r\n      if (isEditing) {\r\n        setIsEditing(false);\r\n        onEditFinished(event);\r\n        // i decided to put this call here so it is called only if onEditFinished execute WO errors!\r\n        setShowControls(false);\r\n      } else {\r\n        setIsEditing(true);\r\n        onEdit(event);\r\n      }\r\n    }\r\n  };\r\n  const onDeleteBtnClicked = (event) => {\r\n    onDeleteClicked(event, deleteConfirmed);\r\n    if (deleteConfirmed) {\r\n      setDeleteConfirmed(false);\r\n      clearTimeout(detonateDeleteTimeout);\r\n      onDeleteConfirmed(event);\r\n    } else {\r\n      setDeleteConfirmed(true);\r\n      if (confirmDeleteTimeout) {\r\n        setDetonateDeleteTimeout(\r\n          setTimeout(() => {\r\n            setDeleteConfirmed(false);\r\n            onDeleteTimedOut();\r\n          }, confirmDeleteTimeout)\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ overflow: 'hidden', display: 'flex' }}>\r\n      {showExpander && (\r\n        <CSSTransition\r\n          in={!isEditing && !showControls}\r\n          enter={true}\r\n          timeout={{ enter: 300, exit: 10 }}\r\n          classNames='menu-expander'\r\n          unmountOnExit\r\n        >\r\n          <button\r\n            className='btn btn-sm btn-action'\r\n            onClick={toggleControls}\r\n            disabled={!available}\r\n          >\r\n            <InlineIcon icon={kebabHorizontal16} />\r\n          </button>\r\n        </CSSTransition>\r\n      )}\r\n      <CSSTransition\r\n        in={showControls}\r\n        enter={true}\r\n        timeout={{ enter: 300, exit: 100 }}\r\n        classNames='menu-slide'\r\n        unmountOnExit\r\n      >\r\n        <div>\r\n          {!isEditing ? (\r\n            <button className='btn btn-sm btn-action' onClick={toggleControls}>\r\n              <InlineIcon icon={chevronRight16} />\r\n            </button>\r\n          ) : null}\r\n          <button\r\n            className='btn btn-sm btn-action'\r\n            onClick={onEditBtnClicked}\r\n            disabled={!available}\r\n          >\r\n            <InlineIcon icon={isEditing ? check16 : pencil16} />\r\n          </button>\r\n          <button\r\n            className={\r\n              'btn btn-sm btn-action ' + (deleteConfirmed ? 'btn-danger' : '')\r\n            }\r\n            onClick={onDeleteBtnClicked}\r\n            disabled={!available}\r\n          >\r\n            <InlineIcon icon={trashcan16} />\r\n          </button>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\nexport default FunctionalitiesMenu;\r\n","import React from 'react';\r\nimport { APILogin, APILogout, APIEditDB, APIDeleteDB, APIAddDB } from '../API';\r\nimport FunctionalitiesMenu from './functionalitiesMenu';\r\n\r\nconst DBCell = (props) => {\r\n  const {\r\n    addAlert,\r\n    authToken,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    setPanel,\r\n    setPreviousPanel,\r\n    user,\r\n    setUser,\r\n    isWorkingDB,\r\n    setWorkingDB,\r\n  } = props;\r\n  const [db, setDB] = React.useState(props.db);\r\n  const [isEditing, setIsEditing] = React.useState(false);\r\n  const getClassForBtn = () =>\r\n    'float-left select-db btn btn-sm ' +\r\n    (isWorkingDB ? ' btn-success' : ' btn-primary') +\r\n    (isLoaded ? '' : ' btn-disable');\r\n  const getTextForBtn = () => (isWorkingDB ? 'Selected' : 'Select');\r\n\r\n  const editStarted = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const onSetWorkingDB = () => {\r\n    setWorkingDB(null);\r\n    setWorkingDB(db);\r\n    addAlert(\r\n      'success',\r\n      'workingDB ' + db.name + ' correctly set.',\r\n      process.env.REACT_APP_ALERT_DEFAULT_DURATION\r\n    );\r\n    setPanel('prospect');\r\n    setPreviousPanel(null);\r\n  };\r\n\r\n  const editEnded = () => {\r\n    setIsLoaded(false);\r\n    APIEditDB(\r\n      authToken,\r\n      db,\r\n      (data) => {\r\n        setIsEditing(false);\r\n        setDB(db);\r\n        setUser({\r\n          ...user,\r\n          dbs: user.dbs.map((d) => (d.id === data.id ? data : d)),\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log('Error while editing DB:', error);\r\n        addAlert(\r\n          'danger',\r\n          'Error while editing DB - ' + error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  const onDelete = () => {\r\n    setDB(null);\r\n    // if delete selected database change workingDB in App\r\n    setIsLoaded(false);\r\n    APIDeleteDB(\r\n      authToken,\r\n      db,\r\n      () => {\r\n        //update local data\r\n        if (isWorkingDB) {\r\n          setWorkingDB(null);\r\n        }\r\n        setUser({\r\n          ...user,\r\n          dbs: user.dbs.filter((d) => d.id !== db.id),\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log('error while deleting DB:', error);\r\n        this.addAlert(\r\n          'danger',\r\n          'Error while deleting DB - ' + error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  return db ? (\r\n    <li className='list-group-item p-3'>\r\n      <div className='clearfix'>\r\n        <button\r\n          className={getClassForBtn()}\r\n          onClick={() => {\r\n            onSetWorkingDB();\r\n          }}\r\n          disabled={!isLoaded || isWorkingDB}\r\n        >\r\n          {getTextForBtn()}\r\n        </button>\r\n        {isEditing ? (\r\n          <input\r\n            className='mx-3'\r\n            type='text'\r\n            name='name'\r\n            value={db.name}\r\n            onChange={(event) => {\r\n              let editDB = { ...db };\r\n              editDB[event.target.name] = event.target.value;\r\n              setDB(editDB);\r\n            }}\r\n          />\r\n        ) : (\r\n          <span className='mx-3'>{db.name}</span>\r\n        )}\r\n        <div className='float-right'>\r\n          <FunctionalitiesMenu\r\n            available={isLoaded}\r\n            show={false}\r\n            onEdit={editStarted}\r\n            onEditFinished={editEnded}\r\n            onDeleteConfirmed={onDelete}\r\n            confirmDeleteTimeout={4000}\r\n          />\r\n        </div>\r\n      </div>\r\n    </li>\r\n  ) : null;\r\n};\r\n\r\nconst AddDBCell = React.forwardRef((props, ref) => {\r\n  const { addAlert, authToken, isLoaded, setIsLoaded, user, setUser } = props;\r\n  const [name, changeName] = React.useState('');\r\n  const [isAdding, setIsAdding] = React.useState(false);\r\n\r\n  const addAborted = () => {\r\n    setIsAdding(false);\r\n    changeName('');\r\n  };\r\n  const addEnded = () => {\r\n    setIsLoaded(false);\r\n    APIAddDB(\r\n      authToken,\r\n      { name },\r\n      (data) => {\r\n        setIsAdding(false);\r\n        changeName('');\r\n        //update local data\r\n        setUser({ ...user, dbs: [...user.dbs, data] });\r\n      },\r\n      (error) => {\r\n        console.log('Error occurred while adding category:', error);\r\n        addAlert(\r\n          'danger',\r\n          'Error occurred while adding category - ' + error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className='w-100 p-3'>\r\n      <div className='m-1 clearfix'>\r\n        {!isAdding && (\r\n          <button\r\n            className='btn btn-success w-100 my-0 py-0'\r\n            onClick={() => {\r\n              setIsAdding(true);\r\n            }}\r\n            disabled={!isLoaded}\r\n          >\r\n            Add new DB\r\n          </button>\r\n        )}\r\n        {isAdding && (\r\n          <div className='form-row'>\r\n            <div className='col-sm mb-2'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                name='name'\r\n                placeholder='DB name'\r\n                value={name}\r\n                onChange={(event) => {\r\n                  changeName(event.target.value);\r\n                }}\r\n                disabled={!isLoaded}\r\n              />\r\n            </div>\r\n            <div className='col-sm-auto text-center'>\r\n              <button className='btn btn-danger mx-1' onClick={addAborted}>\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className='btn btn-success mx-1'\r\n                onClick={addEnded}\r\n                disabled={!isLoaded}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst User = (props) => {\r\n  const {\r\n    addAlert,\r\n    authToken,\r\n    setAuthData,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    setPanel,\r\n    setPreviousPanel,\r\n    user,\r\n    setUser,\r\n    workingDB,\r\n    setWorkingDB,\r\n  } = props;\r\n  const [username, setUsername] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const onLogin = () => {\r\n    APILogin(\r\n      username,\r\n      password,\r\n      (data) => {\r\n        addAlert(\r\n          'success',\r\n          'Logged in successfully',\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n        setAuthData({ token: data.token, uId: data.user_id });\r\n      },\r\n      (error) => {\r\n        let processed_error = error;\r\n        if ('non_field_errors' in error) {\r\n          processed_error = error['non_field_errors'][0];\r\n        }\r\n        addAlert(\r\n          'danger',\r\n          'Error - ' + processed_error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n        console.error('Error while loggin in:', processed_error);\r\n      }\r\n    );\r\n  };\r\n  const onLogout = () => {\r\n    APILogout();\r\n    setAuthData({\r\n      token: null,\r\n      uId: null,\r\n    });\r\n    addAlert(\r\n      'success',\r\n      'User logged out',\r\n      process.env.REACT_APP_ALERT_DEFAULT_DURATION\r\n    );\r\n  };\r\n  return user ? (\r\n    //user logged in\r\n    <React.Fragment>\r\n      <h4>Logged in as {user.username}</h4>\r\n      <div className='text'>\r\n        <h5>Available DBs:</h5>\r\n        {user.dbs.length > 0 && (\r\n          <ul className='list-group'>\r\n            {user.dbs.map((db) => (\r\n              <DBCell\r\n                key={'DB' + db.id}\r\n                db={db}\r\n                isWorkingDB={workingDB ? db.id === workingDB.id : false}\r\n                //\r\n                addAlert={addAlert}\r\n                authToken={authToken}\r\n                isLoaded={isLoaded}\r\n                setIsLoaded={setIsLoaded}\r\n                setPanel={setPanel}\r\n                setPreviousPanel={setPreviousPanel}\r\n                user={user}\r\n                setUser={setUser}\r\n                setWorkingDB={setWorkingDB}\r\n              />\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {user.dbs.length === 0 && (\r\n          <div className='text-center'>\r\n            <p>\r\n              <em>No databases created yet.</em>\r\n            </p>\r\n          </div>\r\n        )}\r\n        <AddDBCell\r\n          addAlert={addAlert}\r\n          authToken={authToken}\r\n          isLoaded={isLoaded}\r\n          setIsLoaded={setIsLoaded}\r\n          user={user}\r\n          setUser={setUser}\r\n        />\r\n      </div>\r\n      <div className='text-center'>\r\n        <button\r\n          className='btn btn-primary'\r\n          onClick={onLogout}\r\n          disabled={!isLoaded}\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  ) : (\r\n    //user not logged in\r\n    <React.Fragment>\r\n      <h4>Please login</h4>\r\n      <form>\r\n        <div className='form-group'>\r\n          <p>\r\n            <label htmlFor='username'>Username/email</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              name='username'\r\n              placeholder='username/email'\r\n              value={username}\r\n              onChange={(event) => {\r\n                setUsername(event.target.value);\r\n              }}\r\n              disabled={!isLoaded}\r\n            />\r\n          </p>\r\n          <p>\r\n            <label htmlFor='password'>Password</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              name='password'\r\n              placeholder='password'\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n              disabled={!isLoaded}\r\n            />\r\n          </p>\r\n        </div>\r\n      </form>\r\n      <div className='text-center'>\r\n        <button\r\n          className='btn btn-primary'\r\n          onClick={onLogin}\r\n          disabled={!isLoaded}\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\n\r\nconst CategoryCell = (props) => {\r\n  const { category } = props;\r\n  const { name } = category;\r\n  return (\r\n    <div className='w-100 pl-1'>\r\n      <div className='text-primary m-1 clearfix'>\r\n        <span>{name}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Prospect = (props) => {\r\n  const { workingDB } = props;\r\n  const retrieveClassForDeltaDiv = (value) => {\r\n    if (value > 0) {\r\n      return 'text-success';\r\n    } else if (value < 0) {\r\n      return 'text-danger';\r\n    }\r\n    return 'text-dark';\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div key='prospectCell' className='border border-primary rounded my-2'>\r\n        <div className='w-100 text'>\r\n          <div className='text-primary m-1 border-primary rounded bg-primary pl-1'>\r\n            <div className='text-light'>Overall prospect</div>\r\n          </div>\r\n        </div>\r\n        <div className='clearfix m-1 text-center'>\r\n          <div className='float-left text-justify'>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Income</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            {workingDB.income}\r\n          </div>\r\n          <div className='float-right text-right'>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Current money</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            {workingDB.current_money.value}\r\n          </div>\r\n        </div>\r\n        <div className='clearfix m-1 text-center'>\r\n          <div className='float-left text-justify'>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Expected expenditure</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            {workingDB.expected_expenditure}\r\n          </div>\r\n          <div className='float-right text-right'>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Actual expenditure</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            {workingDB.actual_expenditure}\r\n          </div>\r\n          <div className=''>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Delta</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            <div\r\n              className={retrieveClassForDeltaDiv(workingDB.delta_expenditure)}\r\n            >\r\n              {workingDB.delta_expenditure}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='clearfix m-1 text-center'>\r\n          <div className='float-left text-justify'>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Expected saving</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            {workingDB.expected_saving}\r\n          </div>\r\n          <div className='float-right text-right'>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Actual saving</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            {workingDB.actual_saving}\r\n          </div>\r\n          <div className=''>\r\n            <span className='text-muted'>\r\n              <small>\r\n                <em>Delta</em>\r\n              </small>\r\n              <br />\r\n            </span>\r\n            <div className={retrieveClassForDeltaDiv(workingDB.delta_saving)}>\r\n              {workingDB.delta_saving}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {workingDB.categories.length === 0 && (\r\n        <p className='text-center'>\r\n          <em>\r\n            No categories created yet.\r\n            <br />\r\n            Go to actual or expected expenditure panel and create one.\r\n          </em>\r\n        </p>\r\n      )}\r\n      {workingDB.categories.map((category) => (\r\n        <div\r\n          key={'categoryprospect' + category.id}\r\n          className='border border-primary rounded my-2 pb-1'\r\n        >\r\n          <CategoryCell category={category} showEditFunctions={false} />\r\n          <div className='clearfix m-1 text-center'>\r\n            <div className='float-left text-justify'>\r\n              <span className='text-muted'>\r\n                <small>\r\n                  <em>Expected</em>\r\n                </small>\r\n                <br />\r\n              </span>\r\n              {category.expected_expenditure}\r\n            </div>\r\n            <div className='float-right text-right'>\r\n              <span className='text-muted'>\r\n                <small>\r\n                  <em>Actual</em>\r\n                </small>\r\n                <br />\r\n              </span>\r\n              {category.actual_expenditure}\r\n            </div>\r\n            <div className=''>\r\n              <span className='text-muted'>\r\n                <small>\r\n                  <em>Delta</em>\r\n                </small>\r\n                <br />\r\n              </span>\r\n              <div className={retrieveClassForDeltaDiv(category.delta)}>\r\n                {category.delta}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Prospect;\r\n","import dateFormat from 'dateformat';\r\n\r\nexport const formatMonth = (month) => {\r\n  //console.log(month);\r\n  const splitted = month.split('-').map((c) => parseInt(c));\r\n  const d = new Date(splitted[1], splitted[0] - 1, 1, 0, 0, 0);\r\n  //console.log(d);\r\n  const format = 'yyyy - mmm';\r\n  const ret = dateFormat(d, format);\r\n  return ret;\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  //console.log(date, typeof date);\r\n  const d = new Date(date);\r\n  const current_d = new Date();\r\n  let format = 'dddd, mmm dS, yyyy, H:MM';\r\n  if (d.getFullYear() === current_d.getFullYear()) {\r\n    format = 'dddd, mmm dS, H:MM';\r\n  }\r\n  const ret = dateFormat(d, format);\r\n  return ret;\r\n};\r\n\r\nexport default formatDate;\r\n","import React from 'react';\r\nimport { InlineIcon } from '@iconify/react';\r\nimport workflow16 from '@iconify-icons/octicon/workflow-16';\r\nimport FunctionalitiesMenu from '../functionalitiesMenu';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport {\r\n  APIAddCategory,\r\n  APIEditCategory,\r\n  APIDeleteCategory,\r\n  APIDeleteExpenditure,\r\n  APICopyPrecMonthExp,\r\n} from '../../API';\r\n\r\nimport formatDate from '../uniformDate';\r\n\r\nconst CategoryCell = (props) => {\r\n  const {\r\n    addAlert,\r\n    authToken,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    workingDB,\r\n    setWorkingDB,\r\n    showEditFunctions,\r\n  } = props;\r\n  const [category, setCategory] = React.useState(props.category);\r\n  const [isEditing, setIsEditing] = React.useState(false);\r\n  const eventHandler = (event) => {\r\n    let categoryUpdate = { ...category };\r\n    categoryUpdate[event.target.name] = event.target.value;\r\n    setCategory(categoryUpdate);\r\n  };\r\n  const editStarted = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const editEnded = () => {\r\n    setIsLoaded(false);\r\n    APIEditCategory(\r\n      authToken,\r\n      category,\r\n      (data) => {\r\n        setIsEditing(false);\r\n        setWorkingDB({\r\n          ...workingDB,\r\n          categories: workingDB.categories.map((c) =>\r\n            c.id === data.id ? data : c\r\n          ),\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log('error while editing category', error);\r\n        addAlert(\r\n          'danger',\r\n          'Error while editing category - ' + error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n  const onDelete = () => {\r\n    setIsLoaded(false);\r\n    APIDeleteCategory(\r\n      authToken,\r\n      category,\r\n      (data) => {\r\n        setWorkingDB({\r\n          ...workingDB,\r\n          categories: workingDB.categories.filter((c) => category.id !== c.id),\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log('error while deleting category', error);\r\n        addAlert(\r\n          'danger',\r\n          'Error while editing deleting - ' + error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    category && (\r\n      <div className='w-100 pl-1'>\r\n        <div className='text-primary m-1 clearfix'>\r\n          {showEditFunctions && isEditing ? (\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              value={category.name}\r\n              onChange={eventHandler}\r\n            />\r\n          ) : (\r\n            <span>{category.name}</span>\r\n          )}\r\n          {showEditFunctions ? (\r\n            <div className='float-right'>\r\n              <FunctionalitiesMenu\r\n                available={isLoaded}\r\n                onEdit={editStarted}\r\n                onEditFinished={editEnded}\r\n                onDeleteConfirmed={onDelete}\r\n                confirmDeleteTimeout={4000}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport const AddCategoryCell = (props) => {\r\n  const [name, changeName] = React.useState('');\r\n  const [isAdding, setIsAdding] = React.useState(false);\r\n  const {\r\n    addAlert,\r\n    authToken,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    workingDB,\r\n    setWorkingDB,\r\n  } = props;\r\n\r\n  const onAdd = () => {\r\n    setIsAdding(true);\r\n  };\r\n  const addAborted = () => {\r\n    setIsAdding(false);\r\n    changeName('');\r\n  };\r\n  const addEnded = () => {\r\n    const category = {\r\n      db: workingDB.id,\r\n      name: name,\r\n    };\r\n    setIsLoaded(false);\r\n    APIAddCategory(\r\n      authToken,\r\n      category,\r\n      (data) => {\r\n        setIsAdding(false);\r\n        changeName('');\r\n        //updateLocalData();\r\n        setWorkingDB({\r\n          ...workingDB,\r\n          categories: [...workingDB.categories, data],\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log('Error occurred while adding category', error);\r\n        addAlert(\r\n          'danger',\r\n          'Error occurred while adding category - ' + error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className='w-100 p-2'>\r\n      <div className='m-1 clearfix'>\r\n        {isAdding && (\r\n          <div className='form-row'>\r\n            <div className='col-sm mb-2'>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                name='name'\r\n                placeholder='Category name'\r\n                value={name}\r\n                onChange={(event) => {\r\n                  changeName(event.target.value);\r\n                }}\r\n                disabled={!isLoaded}\r\n              />\r\n            </div>\r\n            <div className='col-sm-auto text-center'>\r\n              <button className='btn btn-danger mx-1' onClick={addAborted}>\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className='btn btn-success mx-1'\r\n                onClick={addEnded}\r\n                disabled={!isLoaded}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!isAdding && (\r\n          <button\r\n            className='btn btn-success w-100 my-0 py-0'\r\n            onClick={() => {\r\n              onAdd();\r\n            }}\r\n            disabled={!isLoaded}\r\n          >\r\n            Add new category\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst ExpenditureCell = (props) => {\r\n  const hasMouse = window.matchMedia('(hover:hover').matches;\r\n  const [showControls, setShowControls] = React.useState(hasMouse);\r\n  const [expenditure, setExpenditure] = React.useState(props.expenditure);\r\n  const {\r\n    addAlert,\r\n    authToken,\r\n    expenditures,\r\n    setExpenditures,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    setExpenditureForModal,\r\n    setShowExpenditureModal,\r\n  } = props;\r\n\r\n  React.useEffect(() => {\r\n    setExpenditure(props.expenditure);\r\n  }, [props.expenditure]);\r\n\r\n  const onEdit = (expenditure) => {\r\n    setExpenditureForModal(expenditure);\r\n    setShowExpenditureModal(true);\r\n  };\r\n  const onDelete = (expenditure) => {\r\n    setIsLoaded(false);\r\n    APIDeleteExpenditure(\r\n      authToken,\r\n      expenditure,\r\n      () => {\r\n        setExpenditures(expenditures.filter((e) => e.id !== expenditure.id));\r\n      },\r\n      (error) => {\r\n        console.log('Error while deleting expenditure', error);\r\n        addAlert(\r\n          'danger',\r\n          'Error while deleting expenditure - ' + error,\r\n          process.env.REACT_APP_ALERT_ERROR_DURATION\r\n        );\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n  const handlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      setShowControls(true);\r\n    },\r\n    onSwipedRight: () => {\r\n      setShowControls(false);\r\n    },\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true,\r\n  });\r\n\r\n  return expenditure ? (\r\n    <div className='pl-3 pr-1 py-1'>\r\n      <div\r\n        {...(hasMouse ? null : handlers)}\r\n        className='d-flex align-items-stretch bg-light border border-dark rounded m-0'\r\n      >\r\n        <div className='flex-grow-1 pl-1'>\r\n          <div className='text'>{expenditure.name}</div>\r\n          <div className='text text-muted'>{formatDate(expenditure.date)}</div>\r\n          <div className='text'>\r\n            <span>{expenditure.value + ' €'}</span>\r\n          </div>\r\n        </div>\r\n        <div className='d-flex flex-column'>\r\n          <div className='flex-grow-1 mt-1 mr-1'>\r\n            <FunctionalitiesMenu\r\n              showExpander={hasMouse}\r\n              showControls={!hasMouse && showControls}\r\n              onShowControlsChanged={(showC) => {\r\n                setShowControls(showC);\r\n              }}\r\n              available={isLoaded}\r\n              onEdit={\r\n                hasMouse\r\n                  ? (e) => {\r\n                      e.currentTarget.blur();\r\n                      onEdit(expenditure);\r\n                    }\r\n                  : () => {\r\n                      setShowControls(false);\r\n                      onEdit(expenditure);\r\n                    }\r\n              }\r\n              onDeleteConfirmed={() => {\r\n                onDelete(expenditure);\r\n              }}\r\n              confirmDeleteTimeout={4000}\r\n            />\r\n          </div>\r\n          {(Boolean(expenditure.expected_expenditure) ||\r\n            (expenditure.is_expected &&\r\n              expenditure.actual_expenditures.length > 0)) && (\r\n            <div className='clearfix'>\r\n              <div className='float-right mb-1 mr-1'>\r\n                <button className='btn btn-small btn-action'>\r\n                  <InlineIcon icon={workflow16} rotate={135} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst CategoriesView = (props) => {\r\n  const {\r\n    selectedPanel,\r\n    //\r\n    addAlert,\r\n    authToken,\r\n    expenditures,\r\n    setExpenditures,\r\n    isLoaded,\r\n    onRefresh,\r\n    setIsLoaded,\r\n    workingDB,\r\n    setWorkingDB,\r\n    workingMonth,\r\n    setExpenditureForModal,\r\n    setShowExpenditureModal,\r\n  } = props;\r\n  const filterExpenditure = (expenditure) => {\r\n    if (!workingMonth) {\r\n      return false;\r\n    }\r\n    let [month, year] = workingMonth.split('-');\r\n    month = parseInt(month);\r\n    year = parseInt(year);\r\n    const d = new Date(expenditure.date);\r\n    const ret = month === d.getMonth() + 1 && year === d.getFullYear();\r\n    return ret;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {workingDB.categories.length === 0 && (\r\n        <div className='text text-center'>\r\n          <p>\r\n            <em>No categories created yet.</em>\r\n          </p>\r\n        </div>\r\n      )}\r\n      {workingDB.categories.length > 0 &&\r\n        workingDB.categories.map((category) => {\r\n          let expendituresToRender = [];\r\n          if (expenditures) {\r\n            expendituresToRender = expenditures.filter(\r\n              (e) =>\r\n                e.is_expected === (selectedPanel === 'expected') &&\r\n                e.category === category.id &&\r\n                filterExpenditure(e)\r\n            );\r\n          }\r\n          return (\r\n            <div\r\n              key={'category' + selectedPanel + category.id}\r\n              className='border border-primary rounded my-2'\r\n            >\r\n              <CategoryCell\r\n                category={category}\r\n                showEditFunctions={true}\r\n                //\r\n                addAlert={addAlert}\r\n                authToken={authToken}\r\n                isLoaded={isLoaded}\r\n                setIsLoaded={setIsLoaded}\r\n                workingDB={workingDB}\r\n                setWorkingDB={setWorkingDB}\r\n              />\r\n              {expendituresToRender.length > 0 ? (\r\n                expendituresToRender.map((expenditure) => (\r\n                  <ExpenditureCell\r\n                    key={\r\n                      'expenditure' +\r\n                      expenditure.category +\r\n                      selectedPanel +\r\n                      expenditure.id\r\n                    }\r\n                    expenditure={expenditure}\r\n                    addAlert={addAlert}\r\n                    authToken={authToken}\r\n                    expenditures={expenditures}\r\n                    setExpenditures={setExpenditures}\r\n                    isLoaded={isLoaded}\r\n                    setIsLoaded={setIsLoaded}\r\n                    workingDB={workingDB}\r\n                    setWorkingDB={setWorkingDB}\r\n                    setExpenditureForModal={setExpenditureForModal}\r\n                    setShowExpenditureModal={setShowExpenditureModal}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <p className='text-center'>\r\n                  <em>No expenditures added yet.</em>\r\n                </p>\r\n              )}\r\n              <div className='m-1 clearfix' style={{ minHeight: 10 }}>\r\n                {expendituresToRender.length > 0 && (\r\n                  <>\r\n                    <div className='float-left'>\r\n                      {expendituresToRender.length +\r\n                        (expendituresToRender.length !== 1\r\n                          ? ' expenditures'\r\n                          : ' expenditure')}\r\n                    </div>\r\n                    <div className='float-right'>\r\n                      {selectedPanel === 'actual'\r\n                        ? category.actual_expenditure\r\n                        : category.expected_expenditure}{' '}\r\n                      €\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      <AddCategoryCell\r\n        addAlert={addAlert}\r\n        authToken={authToken}\r\n        isLoaded={isLoaded}\r\n        setIsLoaded={setIsLoaded}\r\n        workingDB={workingDB}\r\n        setWorkingDB={setWorkingDB}\r\n      />\r\n      <div className='w-100 p-2'>\r\n        <button\r\n          className='btn btn-primary w-100 my-0 py-0'\r\n          onClick={(e) => {\r\n            APICopyPrecMonthExp(\r\n              authToken,\r\n              workingDB.id,\r\n              workingMonth,\r\n              {},\r\n              () => {},\r\n              () => {},\r\n              () => {\r\n                onRefresh();\r\n              }\r\n            );\r\n          }}\r\n        >\r\n          Copy precend months expected expenditures\r\n        </button>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CategoriesView;\r\n","import React from 'react';\r\nimport { formatMonth } from '../uniformDate';\r\n\r\nconst MonthCell = (props) => {\r\n  const { month, isWorkingMonth, isLoaded, setWorkingMonth } = props;\r\n  const [monthName, monthIncome, monthActualMoney] = month;\r\n  return (\r\n    <li className='list-group-item p-3'>\r\n      <div className='row'>\r\n        <div className='col-auto px-1'>\r\n          <button\r\n            className={\r\n              'px-2 py-1 btn btn-sm ' +\r\n              (isWorkingMonth ? 'btn-success' : 'btn-primary')\r\n            }\r\n            disabled={!isLoaded || isWorkingMonth}\r\n            onClick={() => {\r\n              setWorkingMonth(monthName);\r\n            }}\r\n          >\r\n            {/*isWorkingMonth ? 'Selected' : 'Select'*/ 'Select'}\r\n          </button>\r\n        </div>\r\n        <div className='col px-1'>{formatMonth(monthName)}</div>\r\n        <div className='col px-1'>{monthIncome}</div>\r\n        <div className='col px-1'>{monthActualMoney}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst Months = (props) => {\r\n  const { isLoaded, months, workingMonth, setWorkingMonth } = props;\r\n  const [showExplanation, setShowExaplanation] = React.useState(false);\r\n  return (\r\n    <div>\r\n      {months.length === 0 && (\r\n        <p className='text-center'>\r\n          <em>No months to show.</em>\r\n        </p>\r\n      )}\r\n      {months.length > 0 && (\r\n        <ul className='list-group'>\r\n          {months.map((month) => {\r\n            return (\r\n              <MonthCell\r\n                key={month}\r\n                month={month}\r\n                isWorkingMonth={workingMonth === month[0]}\r\n                //\r\n                isLoaded={isLoaded}\r\n                setWorkingMonth={setWorkingMonth}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n      <p className='text-center'>\r\n        <em>\r\n          {showExplanation &&\r\n            'Months will appear here if they have at least one expenditure or an income registered. '}\r\n          <a\r\n            href='#dummy'\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setShowExaplanation(!showExplanation);\r\n            }}\r\n          >\r\n            {showExplanation ? 'Hide' : 'How do I add months?'}\r\n          </a>\r\n        </em>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Months;\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { APIAddExpenditure, APIEditExpenditure } from '../API';\r\n\r\nconst AddEditExpenditureModal = (props) => {\r\n  const {\r\n    isExpected,\r\n    authToken,\r\n    expenditures,\r\n    setExpenditures,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    setShowExpenditureModal,\r\n    workingDB,\r\n  } = props;\r\n  const dateToLocaleISOString = (date = new Date()) => {\r\n    const utcMilliseconds = date.getTime();\r\n    const localMilliseconds =\r\n      utcMilliseconds - date.getTimezoneOffset() * 60 * 1000;\r\n    const localDate = new Date(localMilliseconds);\r\n    return localDate.toISOString().slice(0, -8);\r\n  };\r\n\r\n  const prepareExpenditureToBeSavedLocally = (exp) => {\r\n    let ret = { ...exp };\r\n    ret['category'] = ret['category'] ? ret['category'] : 0;\r\n    ret['expected_expenditure'] = ret['expected_expenditure']\r\n      ? ret['expected_expenditure']\r\n      : 0;\r\n    ret['date'] = ret.date.slice(0, -9);\r\n    return ret;\r\n  };\r\n\r\n  const [expenditure, setExpenditure] = React.useState(\r\n    props.expenditure\r\n      ? prepareExpenditureToBeSavedLocally(props.expenditure)\r\n      : {\r\n          name: '',\r\n          value: '',\r\n          date: dateToLocaleISOString(),\r\n          category: 0,\r\n          is_expected: isExpected,\r\n          expected_expenditure: 0,\r\n          db: workingDB.id,\r\n        }\r\n  );\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    let expenditure_update = { ...expenditure };\r\n    switch (name) {\r\n      case 'expected_expenditure':\r\n        //change expected expenditure\r\n        expenditure_update[name] = parseInt(value);\r\n        break;\r\n      case 'category':\r\n        expenditure_update[name] = parseInt(value);\r\n        break;\r\n      case 'date':\r\n        expenditure_update[name] = value;\r\n        break;\r\n      default:\r\n        expenditure_update[name] = value;\r\n    }\r\n\r\n    //updated\r\n    if (name === 'category' || name === 'expected_expenditure') {\r\n      const expectedExpenditure = expenditures.reduce(\r\n        (prev, e) =>\r\n          e.is_expected && e.id === expenditure_update.expected_expenditure\r\n            ? e\r\n            : prev,\r\n        null\r\n      );\r\n      if (\r\n        expectedExpenditure &&\r\n        expectedExpenditure.category !== expenditure_update.category\r\n      ) {\r\n        if (name === 'category') {\r\n          // check if category is coherent with expected_expenditure(EE) category, if not clear EE\r\n          expenditure_update['expected_expenditure'] = 0;\r\n        } else if (name === 'expected_expenditure') {\r\n          // check if EE's category is coherent with category, if not set category to EE's category\r\n          expenditure_update['category'] = expectedExpenditure.category;\r\n        }\r\n      }\r\n    }\r\n\r\n    setExpenditure(expenditure_update);\r\n  };\r\n  const handleSubmit = () => {\r\n    const expToSubmit = {\r\n      ...expenditure,\r\n      expected_expenditure:\r\n        expenditure.expected_expenditure === 0\r\n          ? null\r\n          : expenditure.expected_expenditure,\r\n      category: expenditure.category === 0 ? null : expenditure.category,\r\n    };\r\n    if ('id' in expenditure) {\r\n      setIsLoaded(false);\r\n      APIEditExpenditure(\r\n        authToken,\r\n        expToSubmit,\r\n        (data) => {\r\n          //success\r\n          setExpenditures(\r\n            expenditures.map((e) => (e.id === data.id ? data : e))\r\n          );\r\n          // run second API call to update prospect-related informations\r\n          setShowExpenditureModal(false);\r\n        },\r\n        (error) => {\r\n          //error\r\n          console.log('error while adding new expenditure: ', error);\r\n        },\r\n        () => {\r\n          setIsLoaded(true);\r\n        }\r\n      );\r\n    } else {\r\n      setIsLoaded(false);\r\n      APIAddExpenditure(\r\n        authToken,\r\n        expToSubmit,\r\n        (data) => {\r\n          //success\r\n          setExpenditures([...expenditures, data]);\r\n          setShowExpenditureModal(false);\r\n          // run second API call to update prospect-related informations\r\n        },\r\n        (error) => {\r\n          //error\r\n          console.log('error while adding new expenditure: ', error);\r\n        },\r\n        () => {\r\n          setIsLoaded(true);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const getExpectedExpendituresOrderedByCategoryId = () => {\r\n    return expenditures\r\n      .filter((e) => e.is_expected)\r\n      .sort((a, b) => {\r\n        return a.category > b.category ? 1 : a.category < b.category ? -1 : 0;\r\n      });\r\n  };\r\n\r\n  const getTitle = () => {\r\n    if ('id' in expenditure) {\r\n      if (expenditure.is_expected) {\r\n        return 'Edit expected expenditure';\r\n      } else {\r\n        return 'Edit actual expenditure';\r\n      }\r\n    } else {\r\n      if (expenditure.is_expected) {\r\n        return 'Add expected expenditure';\r\n      } else {\r\n        return 'Add actual expenditure';\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      onHide={() => {\r\n        setShowExpenditureModal(false);\r\n      }}\r\n      size='xl'\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{getTitle()}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <p>\r\n                <label htmlFor='name'>Description</label>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  name='name'\r\n                  placeholder='Description'\r\n                  value={expenditure.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </p>\r\n              <p>\r\n                <label htmlFor='name'>Value</label>\r\n                <input\r\n                  type='number'\r\n                  step={0.01}\r\n                  className='form-control'\r\n                  name='value'\r\n                  placeholder='€'\r\n                  value={\r\n                    parseFloat(expenditure.value)\r\n                      ? parseFloat(expenditure.value)\r\n                      : ''\r\n                  }\r\n                  onChange={handleChange}\r\n                />\r\n              </p>\r\n              <p>\r\n                <label htmlFor='name'>{'Date & Time'}</label>\r\n                <input\r\n                  type='datetime-local'\r\n                  className='form-control'\r\n                  name='date'\r\n                  placeholder='Date & Time'\r\n                  value={expenditure.date}\r\n                  onChange={handleChange}\r\n                />\r\n              </p>\r\n              <p>\r\n                <label htmlFor='category'>Category</label>\r\n                <select\r\n                  name='category'\r\n                  className='form-control'\r\n                  onChange={handleChange}\r\n                  value={expenditure.category ? expenditure.category : 0}\r\n                >\r\n                  <option key={'categorydefault0'} value={0}>\r\n                    -----\r\n                  </option>\r\n                  {workingDB.categories.map((c) => (\r\n                    <option key={'category' + c.id} value={c.id}>\r\n                      {c.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              {!expenditure.is_expected ? (\r\n                <p>\r\n                  <label htmlFor='expected_expenditure'>\r\n                    Expected expenditure\r\n                  </label>\r\n                  <select\r\n                    name='expected_expenditure'\r\n                    className='form-control'\r\n                    onChange={handleChange}\r\n                    value={\r\n                      expenditure.expected_expenditure\r\n                        ? expenditure.expected_expenditure\r\n                        : 0\r\n                    }\r\n                  >\r\n                    <option key={'expectedexpendituredefault0'} value={0}>\r\n                      -----\r\n                    </option>\r\n                    {getExpectedExpendituresOrderedByCategoryId().map((e) => (\r\n                      <option key={'expectedexpenditure' + e.id} value={e.id}>\r\n                        {e.value.toString() + '€, ' + e.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <div className='text-center w-100'>\r\n          <button\r\n            className={'btn btn-primary px-5'}\r\n            onClick={handleSubmit}\r\n            disabled={!isLoaded}\r\n          >\r\n            {'Save'}\r\n          </button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEditExpenditureModal;\r\n","import { InlineIcon } from '@iconify/react';\r\nimport pencil16 from '@iconify-icons/octicon/pencil-16';\r\nimport check16 from '@iconify-icons/octicon/check-16';\r\nimport React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { APIAddCash, APIDeleteCash, APIEditCash } from '../API';\r\nimport FunctionalitiesMenu from './functionalitiesMenu';\r\nimport formatDate from './uniformDate';\r\n\r\nconst IncomeCell = (props) => {\r\n  const [isEditing, setIsEditing] = React.useState(false);\r\n  const { authToken, incomes, setIncomes, isLoaded, setIsLoaded } = props;\r\n  const [income, setIncome] = React.useState(props.income);\r\n  const eventHandler = (event) => {\r\n    let incomeUpdate = { ...income };\r\n    incomeUpdate[event.target.name] = event.target.value;\r\n    setIncome(incomeUpdate);\r\n  };\r\n  const editStarted = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const editEnded = () => {\r\n    const incomeUpdate = { ...income, name: income.name, value: income.value };\r\n    APIEditCash(\r\n      authToken,\r\n      incomeUpdate,\r\n      (data) => {\r\n        setIsEditing(false);\r\n        setIncomes(incomes.map((c) => (c.id === data.id ? data : c)));\r\n      },\r\n      (error) => {\r\n        console.log('error while editing income', error);\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n  const onDelete = () => {\r\n    setIsLoaded(false);\r\n    APIDeleteCash(\r\n      authToken,\r\n      income,\r\n      () => {\r\n        //send to parent to handle\r\n        setIncomes(incomes.filter((c) => c.id !== income.id));\r\n      },\r\n      (error) => {\r\n        console.log('error while deleting income', error);\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <li className='list-group-item'>\r\n      <div className='clearfix'>\r\n        <div className='float-right'>\r\n          <FunctionalitiesMenu\r\n            available={isLoaded}\r\n            onEdit={editStarted}\r\n            onEditFinished={editEnded}\r\n            onDeleteConfirmed={onDelete}\r\n            confirmDeleteTimeout={4000}\r\n          />\r\n        </div>\r\n        <div>\r\n          {isEditing ? (\r\n            <input\r\n              type='text'\r\n              name='value'\r\n              value={income.value}\r\n              onChange={eventHandler}\r\n            />\r\n          ) : (\r\n            <span>{income.value}</span>\r\n          )}\r\n          <span> €</span>\r\n          <span className='mx-2'></span>\r\n          {isEditing ? (\r\n            <input\r\n              type='text'\r\n              name='name'\r\n              value={income.name}\r\n              onChange={eventHandler}\r\n            />\r\n          ) : (\r\n            <span className='text-muted'>\r\n              <em>{income.name}</em>\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport const AddIncomeCell = (props) => {\r\n  const [name, changeName] = React.useState('');\r\n  const [value, changeValue] = React.useState('');\r\n  const [isAdding, setIsAdding] = React.useState(false);\r\n  const {\r\n    authToken,\r\n    incomes,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    setIncomes,\r\n    workingMonth,\r\n  } = props;\r\n\r\n  const onAdd = () => {\r\n    setIsAdding(true);\r\n  };\r\n  const addAborted = () => {\r\n    setIsAdding(false);\r\n    changeName('');\r\n  };\r\n  const addEnded = () => {\r\n    const workingMonthAndYearExtractor = (wM) => {\r\n      const components = wM.split('-');\r\n      const ret = components.map((c) => parseInt(c));\r\n      return ret;\r\n    };\r\n    const [wMonth, wYear] = workingMonthAndYearExtractor(workingMonth);\r\n    const income = {\r\n      db: localStorage.getItem('workingDBId'),\r\n      name: name,\r\n      value: value,\r\n      income: true,\r\n      reference_date: new Date(wYear, wMonth - 1, 1, 0, 0, 0),\r\n    };\r\n    setIsLoaded(false);\r\n    APIAddCash(\r\n      authToken,\r\n      income,\r\n      (data) => {\r\n        setIsAdding(false);\r\n        changeName('');\r\n        changeValue('');\r\n        setIncomes([...incomes, data]);\r\n      },\r\n      (error) => {\r\n        console.log('Error occurred while registering income', error);\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className='w-100 p-2'>\r\n      <div className='m-1 clearfix'>\r\n        {isAdding ? (\r\n          <div>\r\n            <h5>Register new income:</h5>\r\n            <div className='form-row'>\r\n              <div className='col-md mb-2'>\r\n                <div className='form-row'>\r\n                  <div className='col-sm'>\r\n                    <input\r\n                      type='number'\r\n                      step={0.01}\r\n                      className='form-control'\r\n                      name='value'\r\n                      placeholder='Value'\r\n                      value={value}\r\n                      onChange={(event) => {\r\n                        changeValue(event.target.value);\r\n                      }}\r\n                      disabled={!isLoaded}\r\n                    />\r\n                  </div>\r\n                  <div className='col-sm'>\r\n                    <input\r\n                      type='text'\r\n                      className='form-control'\r\n                      name='description'\r\n                      placeholder='Name'\r\n                      value={name}\r\n                      onChange={(event) => {\r\n                        changeName(event.target.value);\r\n                      }}\r\n                      disabled={!isLoaded}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='col-md-auto text-center'>\r\n                <button className='btn btn-danger mx-1' onClick={addAborted}>\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className='btn btn-success mx-1'\r\n                  onClick={addEnded}\r\n                  disabled={!isLoaded}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <button\r\n            className='btn btn-success w-100 my-0 py-0'\r\n            onClick={() => {\r\n              onAdd();\r\n            }}\r\n            disabled={!isLoaded}\r\n          >\r\n            Register new income\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ActualMoneyOrIncomeModal = (props) => {\r\n  const {\r\n    show,\r\n    //\r\n    authToken,\r\n    incomes,\r\n    setIncomes,\r\n    isLoaded,\r\n    setIsLoaded,\r\n    setShowActualMoneyOrIncomeModal,\r\n    workingDB,\r\n    getWorkingDB,\r\n    workingMonth,\r\n  } = props;\r\n\r\n  const [isEditing, setIsEditing] = React.useState(false);\r\n  const [currentMoney, setCurrentMoney] = React.useState(\r\n    workingDB ? workingDB.current_money : null\r\n  );\r\n\r\n  const eventHandler = (event) => {\r\n    setCurrentMoney({\r\n      ...currentMoney,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const editStarted = () => {\r\n    //console.log(currentMoney);\r\n    setIsEditing(true);\r\n  };\r\n  const editEnded = (callback = () => {}) => {\r\n    const currentMoneyUpdate = {\r\n      ...currentMoney,\r\n      name: 'dummy',\r\n      value: currentMoney.value,\r\n    };\r\n    //console.log('sending this to API', currentMoneyUpdate);\r\n    setIsLoaded(false);\r\n    APIEditCash(\r\n      authToken,\r\n      currentMoneyUpdate,\r\n      (data) => {\r\n        //console.log('received this as data', data);\r\n        setIsEditing(false);\r\n        callback();\r\n        getWorkingDB();\r\n      },\r\n      (error) => {\r\n        console.log('error while editing current_money', error);\r\n      },\r\n      () => {\r\n        setIsLoaded(true);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={() => {\r\n        setShowActualMoneyOrIncomeModal(false);\r\n      }}\r\n      size='xl'\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add/edit income/actual money</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className='mb-2'>\r\n          <h5>Actual current money:</h5>\r\n          <div className='clearfix'>\r\n            <div className='list-group-item py-3 pr-3 pl-4'>\r\n              <div className='float-right'>\r\n                <button\r\n                  className='btn btn-sm btn-action p-1 pb-2'\r\n                  onClick={\r\n                    isEditing\r\n                      ? () => {\r\n                          editEnded();\r\n                        }\r\n                      : editStarted\r\n                  }\r\n                  disabled={!isLoaded}\r\n                >\r\n                  <InlineIcon icon={isEditing ? check16 : pencil16} />\r\n                </button>\r\n              </div>\r\n              {isEditing ? (\r\n                <input\r\n                  type='text'\r\n                  name='value'\r\n                  value={currentMoney ? currentMoney.value : ''}\r\n                  onChange={eventHandler}\r\n                />\r\n              ) : (\r\n                <span>{currentMoney ? currentMoney.value : 'Loading...'}</span>\r\n              )}\r\n              <span> €</span>\r\n              <span className='text-muted'>\r\n                <em>\r\n                  {currentMoney\r\n                    ? isEditing\r\n                      ? ''\r\n                      : ' at ' + formatDate(currentMoney.date)\r\n                    : ''}\r\n                </em>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h5>\r\n          <div className='clearfix'>\r\n            <div className='float-right'>\r\n              <div className='text-dark'>\r\n                {workingDB ? workingDB.income : ''} €\r\n              </div>\r\n            </div>\r\n            <span>Incomes:</span>\r\n          </div>\r\n        </h5>\r\n        {incomes.length > 0 && (\r\n          <ul className='list-group'>\r\n            {incomes.map((i) => {\r\n              return (\r\n                <IncomeCell\r\n                  authToken={authToken}\r\n                  key={'income' + i.id}\r\n                  income={i}\r\n                  incomes={incomes}\r\n                  setIncomes={setIncomes}\r\n                  isLoaded={isLoaded}\r\n                  setIsLoaded={setIsLoaded}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n        {incomes.length === 0 && (\r\n          <p className='text-center'>\r\n            <em>No incomes registered yet.</em>\r\n          </p>\r\n        )}\r\n        <AddIncomeCell\r\n          authToken={authToken}\r\n          incomes={incomes}\r\n          setIncomes={setIncomes}\r\n          isLoaded={isLoaded}\r\n          setIsLoaded={setIsLoaded}\r\n          workingMonth={workingMonth}\r\n        />\r\n      </Modal.Body>\r\n      {isEditing && (\r\n        <Modal.Footer>\r\n          <div className='text-center w-100'>\r\n            <button\r\n              className={'btn btn-primary px-5'}\r\n              onClick={() => {\r\n                editEnded(() => {\r\n                  setShowActualMoneyOrIncomeModal(false);\r\n                });\r\n              }}\r\n            >\r\n              {'Save and close'}\r\n            </button>\r\n          </div>\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default ActualMoneyOrIncomeModal;\r\n","export default __webpack_public_path__ + \"static/media/loading256.df1e3eaf.gif\";","import React from 'react';\r\n/*\r\n  Evaluate objects with passed functions:\r\n    evalutating Function:\r\n      - is applied by some method, so the conditions are satisfied when at least one object\r\n        passed to evaluatingFunction makes it return true\r\n      - default is obj !== prevObj\r\n    multipleEvaluatingFunction:\r\n      - takes all objects as argument so you can apply specific condition knowing\r\n        array sort order (which is the same as objects)\r\n      - default is always true\r\n    the results of these two evaluating functions are combined with the logical operator &&\r\n*/\r\nexport const useObjectsDidUpdateEffect = (\r\n  effect,\r\n  objects,\r\n  evaluatingFunction = (prevObj, obj, firstCall) => obj !== prevObj,\r\n  multipleEvaluatingFunction = (prevObjs, objs, firstCalls) => true\r\n) => {\r\n  let fcs = [];\r\n  const objectsRef = React.useRef(\r\n    objects.map((o) => {\r\n      fcs.push(true);\r\n      return o;\r\n    })\r\n  );\r\n  const firstCalls = React.useRef(fcs);\r\n  React.useEffect(() => {\r\n    if (\r\n      objects.some((o, i) =>\r\n        evaluatingFunction(objectsRef.current[i], o, firstCalls.current[i])\r\n      ) &&\r\n      multipleEvaluatingFunction(\r\n        objectsRef.current,\r\n        objects,\r\n        firstCalls.current\r\n      )\r\n    ) {\r\n      effect();\r\n    }\r\n    objects.forEach((o, i) => {\r\n      objectsRef.current[i] = o;\r\n      if (firstCalls.current[i]) {\r\n        firstCalls.current[i] = false;\r\n      }\r\n    });\r\n  }, objects);\r\n};\r\n","import React from 'react';\nimport './CSSTransitionClasses.css';\nimport './App.css';\nimport Alerts from './components/alerts';\nimport UpperBar from './components/upperBar';\nimport BottomBar from './components/bottomBar';\nimport User from './components/user';\nimport Prospect from './components/mainViewComponents/prospect';\nimport CategoriesView from './components/mainViewComponents/expenditures';\nimport Months from './components/mainViewComponents/months';\nimport AddEditExpenditureModal from './components/addEditExpenditureModal';\nimport ActualMoneyOrIncomeModal from './components/actualMoneyOrIncomeModal';\nimport {\n  APIGetCashes,\n  APIGetDB,\n  APIGetExpenditures,\n  APIGetMonths,\n  APIGetUser,\n} from './API';\nimport loading from './media/img/loading256.gif';\nimport { useObjectsDidUpdateEffect } from './customHooks';\n\nconst getCurrentMonth = () => {\n  const d = new Date();\n  const month = d.getMonth() + 1;\n  const year = d.getFullYear();\n  const currentMonth = (month < 10 ? '0' + month : '' + month) + '-' + year;\n  return currentMonth;\n};\n\nconst App = (props) => {\n  const [authData, setAuthData] = React.useState({\n    token: localStorage.getItem('authToken'),\n    uId: localStorage.getItem('userId'),\n  });\n  const [user, setUser] = React.useState(null);\n  const [workingDB, setWorkingDB] = React.useState(null);\n  const [workingMonth, setWorkingMonth] = React.useState(getCurrentMonth());\n  const [expenditures, setExpenditures] = React.useState(null);\n  const [incomes, setIncomes] = React.useState(null);\n  const [months, setMonths] = React.useState(null);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [alerts, setAlerts] = React.useState([]);\n  const [selectedPanel, setSelectedPanel] = React.useState('prospect');\n  const [previousPanel, setPreviousPanel] = React.useState(null);\n  const [showCashModal, setShowActualMoneyOrIncomeModal] = React.useState(\n    false\n  );\n  const [showExpenditureModal, setShowExpenditureModal] = React.useState(false);\n  const [\n    expenditureModalIsExpected,\n    setExpenditureModalIsExpected,\n  ] = React.useState(false);\n  const [expenditureForModal, setExpenditureForModal] = React.useState(null);\n\n  const addAlert = (type, body, autodismiss = 0) => {\n    const getAlertId = () => {\n      const d = new Date();\n      return d.getTime();\n    };\n    let alert = { type: type, body: body, id: getAlertId() };\n    if (autodismiss > 0) {\n      alert['autodismissFunction'] = () => {\n        setAlerts(alerts.filter((a) => a.id !== alert.id));\n      };\n      alert['autodismissTimeout'] = setTimeout(\n        alert['autodismissFunction'],\n        autodismiss\n      );\n    }\n    setAlerts([...alerts, alert]);\n  };\n\n  const setPanel = (target = null, setPrevious = false) => {\n    if (target !== selectedPanel) {\n      if (setPrevious) {\n        setPreviousPanel(\n          selectedPanel && selectedPanel !== target ? selectedPanel : 'prospect'\n        );\n      } else {\n        setPreviousPanel(null);\n      }\n      setSelectedPanel(target ? target : 'prospect');\n    }\n  };\n\n  const back = () => {\n    if (previousPanel) {\n      setPanel(previousPanel);\n      setPreviousPanel(null);\n    }\n  };\n\n  const getCurrentUser = () => {\n    //changeIsLoaded(false, 'getCurrentUser')\n    if (\n      authData.uId &&\n      authData.token &&\n      authData.uId !== 'null' &&\n      authData.token !== 'null'\n    ) {\n      APIGetUser(\n        authData.token,\n        authData.uId,\n        workingMonth,\n        (data) => {\n          //console.log('user SET');\n          setUser(data);\n        },\n        (error) => {\n          const mex = Object.keys(error).reduce((prev, k) => {\n            return prev + k + ':' + error[k];\n          }, '');\n          console.error('Error while getting user', mex);\n          addAlert(\n            'danger',\n            'Error while getting current user:' + mex,\n            process.env.REACT_APP_ALERT_ERROR_DURATION\n          );\n          setPanel('user');\n        },\n        () => {\n          setIsLoaded(true);\n        }\n      );\n    } else {\n      //console.log('not authData');\n      setIsLoaded(true);\n      setUser(null);\n      setPanel('user');\n    }\n  };\n  const getWorkingDB = () => {\n    //console.log('getWorkingDB');\n    const workingDBId = localStorage.getItem('workingDBId');\n    if (user && (workingDBId || user.dbs.length === 1)) {\n      //automatically set working DB\n      setIsLoaded(false);\n      APIGetDB(\n        authData.token,\n        workingDBId ? workingDBId : user.dbs[0].id,\n        workingMonth,\n        {},\n        (data) => {\n          //console.log('workingDBSET');\n          //console.log(data);\n          setWorkingDB(data);\n        },\n        (error) => {\n          //handle errors here\n          //console.log('error gettin working db', error);\n          localStorage.removeItem('workingDBId');\n        },\n        () => {\n          setIsLoaded(true);\n        }\n      );\n    } else {\n      //console.log('not user && (workingDBId || user.dbs.length === 1)');\n      setIsLoaded(true);\n      setWorkingDB(null);\n      setIncomes(null);\n      setExpenditures(null);\n      setPanel('user');\n    }\n  };\n  const getExpenditures = () => {\n    //console.log('getExpenditures');\n    if (workingDB) {\n      setIsLoaded(false);\n      APIGetExpenditures(\n        authData.token,\n        workingDB.id,\n        workingMonth,\n        {},\n        (data) => {\n          //console.log('Expenditures set');\n          setExpenditures(data.results);\n        },\n        (error) => {\n          //console.log('error gettin expenditures', error);\n        },\n        () => {\n          setIsLoaded(true);\n        }\n      );\n    } else {\n      //console.log('no expenditures because no workingDB');\n      setExpenditures(null);\n    }\n  };\n  const getIncomes = () => {\n    //console.log('getIncomes');\n    if (workingDB) {\n      setIsLoaded(false);\n      APIGetCashes(\n        authData.token,\n        workingDB.id,\n        workingMonth,\n        {},\n        (data) => {\n          //console.log('incomes set');\n          //console.log(data.results);\n          setIncomes(data.results.filter((obj) => obj.income));\n        },\n        (error) => {\n          //console.log('error while gettin incomes', error);\n        },\n        () => {\n          setIsLoaded(true);\n        }\n      );\n    } else {\n      //console.log('no expenditures because no workingDB');\n      setIncomes(null);\n    }\n  };\n  const getMonths = () => {\n    //console.log('getMonths');\n    if (workingDB) {\n      setIsLoaded(false);\n      APIGetMonths(\n        authData.token,\n        workingDB.id,\n        (data) => {\n          //console.log('months set');\n          setMonths(data.results);\n        },\n        (error) => {\n          //console.log('error while gettin month', error);\n        },\n        () => {\n          setIsLoaded(true);\n        }\n      );\n    } else {\n      //console.log('no expenditures because no workingDB');\n      setMonths(null);\n    }\n  };\n\n  useObjectsDidUpdateEffect(\n    () => {\n      localStorage.setItem('authToken', authData.token);\n      localStorage.setItem('userId', authData.uId);\n    },\n    [authData],\n    (prevObj, obj, firstCall) => !firstCall\n  );\n\n  useObjectsDidUpdateEffect(\n    () => {\n      localStorage.setItem('workingDBId', workingDB.id);\n    },\n    [workingDB],\n    (prevObj, obj, firstCall) => !firstCall && obj\n  );\n\n  React.useEffect(() => {\n    //get current user everytime authData changes\n    getCurrentUser();\n  }, [authData]);\n\n  useObjectsDidUpdateEffect(\n    /* setWorkingDB, expenditures, incomeses, months = null if user is null */\n    () => {\n      getWorkingDB();\n    },\n    [user],\n    (prevObj, obj, firstCall) => !firstCall,\n    (prevObjs, objs, firstCalls) => !objs[0]\n  );\n\n  useObjectsDidUpdateEffect(\n    /* get Working DB when user or workingMonth changes but:\n      - not at their first render\n      - if user is not null\n    */\n    getWorkingDB,\n    [user],\n    (prevObj, obj, firstCall) => !firstCall,\n    (prevObjs, objs, firstCalls) => objs[0]\n  );\n\n  useObjectsDidUpdateEffect(\n    /* update incomes, expenditures, months when workingDB changes but:\n      - not at its first render\n      - only if it changes from null or to null\n    */\n    () => {\n      getIncomes();\n      getExpenditures();\n      getMonths();\n      setPanel('prospect');\n    },\n    [workingDB],\n    (prevObj, obj, firstCall) => !firstCall && (!prevObj || !obj)\n  );\n\n  useObjectsDidUpdateEffect(\n    /* update incomes, expenditures, months when workingMonth changes but:\n      - not at its first render\n      - only if it changes from null or to null\n    */\n    () => {\n      getIncomes();\n      getExpenditures();\n      setPanel('prospect');\n    },\n    [workingMonth],\n    (prevObj, obj, firstCall) => !firstCall && prevObj !== obj\n  );\n\n  useObjectsDidUpdateEffect(\n    /* get workingDB, months when expenditures or incomes change but:\n      - not at their first render\n      - not if their previous value was null\n    */\n    () => {\n      getWorkingDB();\n      getMonths();\n    },\n    [incomes, expenditures],\n    (prevObj, obj, firstCall) => !firstCall,\n    (prevObjs, objs, firstCalls) => prevObjs[0] && prevObjs[1]\n  );\n\n  const refresh = () => {\n    getCurrentUser();\n    getIncomes();\n    getExpenditures();\n  };\n\n  /*\n  FOR TEST PURPOSES\n  \n  const userSetNullRef = React.useRef(false);\n  if (!userSetNullRef.current) {\n    setTimeout(() => {\n      //console.log('set user null');\n      setUser(null);\n    }, 5000);\n    userSetNullRef.current = true;\n  }*/\n\n  return (\n    <React.Fragment>\n      <UpperBar\n        isLoaded={isLoaded}\n        onBack={back}\n        onRefresh={refresh}\n        previousPanel={previousPanel}\n        selectedPanel={selectedPanel}\n        setExpenditureForModal={setExpenditureForModal}\n        setExpenditureModalIsExpected={setExpenditureModalIsExpected}\n        setPanel={setPanel}\n        setShowCashModal={setShowActualMoneyOrIncomeModal}\n        setShowExpenditureModal={setShowExpenditureModal}\n        setWorkingMonth={setWorkingMonth}\n        user={user}\n        workingDB={workingDB}\n      />\n      <Alerts\n        alerts={alerts}\n        onClose={(alert) => {\n          clearTimeout(alert.autodismissTimeout);\n          alert.autodismissFunction();\n        }}\n      />\n      {selectedPanel === 'user' && (\n        <User\n          addAlert={addAlert}\n          authToken={authData.token}\n          setAuthData={setAuthData}\n          isLoaded={isLoaded}\n          onBack={back}\n          setIsLoaded={setIsLoaded}\n          setUser={setUser}\n          setPanel={setPanel}\n          setPreviousPanel={setPreviousPanel}\n          workingDB={workingDB}\n          setWorkingDB={setWorkingDB}\n          user={user}\n        />\n      )}\n      {selectedPanel !== 'user' && (\n        <div className='safe-down'>\n          {!workingDB && (\n            <div className='text-center'>\n              <img src={loading} alt='Loading...' style={{ maxWidth: 150 }} />\n            </div>\n          )}\n          {workingDB && (\n            <div>\n              {selectedPanel === 'prospect' && (\n                <Prospect workingDB={workingDB} />\n              )}\n              {(selectedPanel === 'actual' || selectedPanel === 'expected') && (\n                <CategoriesView\n                  selectedPanel={selectedPanel}\n                  //\n                  addAlert={addAlert}\n                  authToken={authData.token}\n                  expenditures={expenditures}\n                  setExpenditures={setExpenditures}\n                  isLoaded={isLoaded}\n                  onRefresh={refresh}\n                  setIsLoaded={setIsLoaded}\n                  workingDB={workingDB}\n                  setWorkingDB={setWorkingDB}\n                  workingMonth={workingMonth}\n                  setExpenditureForModal={setExpenditureForModal}\n                  setShowExpenditureModal={setShowExpenditureModal}\n                />\n              )}\n              {selectedPanel === 'months' && (\n                <Months\n                  isLoaded={isLoaded}\n                  months={months}\n                  workingMonth={workingMonth}\n                  setWorkingMonth={setWorkingMonth}\n                />\n              )}\n              <BottomBar\n                isLoaded={isLoaded}\n                selectedPanel={selectedPanel}\n                setPanel={setPanel}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {showExpenditureModal && (\n        <AddEditExpenditureModal\n          show={showExpenditureModal}\n          expenditure={expenditureForModal}\n          isExpected={expenditureModalIsExpected}\n          //\n          authToken={authData.token}\n          expenditures={expenditures}\n          setExpenditures={setExpenditures}\n          isLoaded={isLoaded}\n          setIsLoaded={setIsLoaded}\n          setShowExpenditureModal={setShowExpenditureModal}\n          workingDB={workingDB}\n        />\n      )}\n      {showCashModal && (\n        <ActualMoneyOrIncomeModal\n          show={showCashModal}\n          //\n          authToken={authData.token}\n          incomes={incomes}\n          setIncomes={setIncomes}\n          isLoaded={isLoaded}\n          setIsLoaded={setIsLoaded}\n          setShowActualMoneyOrIncomeModal={setShowActualMoneyOrIncomeModal}\n          workingDB={workingDB}\n          getWorkingDB={getWorkingDB}\n          setWorkingDB={setWorkingDB}\n          workingMonth={workingMonth}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}